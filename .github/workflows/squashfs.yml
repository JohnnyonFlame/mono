name: Makefile CI

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy: 
      matrix:
        platforms: 
          - armhf
          - aarch64
    steps:
    -
      name: Install dependencies
      run: |
        echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic main restricted universe multiverse" | sudo tee /etc/apt/sources.list
        echo "deb-src http://us.archive.ubuntu.com/ubuntu/ bionic main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
        echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic-security main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
        echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic-updates main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
        echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic-proposed main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
        echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
        echo "deb-src http://us.archive.ubuntu.com/ubuntu/ bionic-security main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
        echo "deb-src http://us.archive.ubuntu.com/ubuntu/ bionic-updates main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
        echo "deb-src http://us.archive.ubuntu.com/ubuntu/ bionic-proposed main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
        echo "deb-src http://us.archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
        sudo dpkg --add-architecture armhf
        sudo dpkg --add-architecture arm64
        sudo apt update || true
        sudo apt install -yy qemu binfmt-support qemu-user-static crossbuild-essential-arm64 \
                         crossbuild-essential-armhf git autoconf libtool automake build-essential \
                         gettext cmake python3 curl squashfs-tools mono-complete libsdl2-2.0-0:armhf \
                         libsdl2-2.0-0:arm64 libsdl2-dev
    - 
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive
    - 
      name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - 
      name: Build Setup
      run: |
        /bin/bash build_workflow.sh ${{ matrix.platforms }}
    - 
      name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: mono-${{ steps.vars.outputs.sha_short }}-${{ matrix.platforms }}
        path: built/mono-${{ steps.vars.outputs.sha_short }}-${{ matrix.platforms }}.squashfs
